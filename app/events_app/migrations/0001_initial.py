# Generated by Django 5.1.2 on 2024-11-15 19:14

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profiles_app', '__first__'),
        ('projects_app', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления в базу')),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата изменения в базе')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subgroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления в базу')),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата изменения в базе')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления в базу')),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата изменения в базе')),
                ('name', models.CharField(max_length=200)),
                ('event_type', models.TextField(blank=True, max_length=300)),
                ('is_owl_mode', models.BooleanField(default=False)),
                ('address', models.TextField(blank=True)),
                ('is_open', models.BooleanField(default=False)),
                ('comment', models.CharField(blank=True, max_length=100)),
                ('is_reminder', models.BooleanField(default=False)),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events_app.color')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='projects_app.project')),
                ('subgroups', models.ManyToManyField(blank=True, related_name='events', to='events_app.subgroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventRecurring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления в базу')),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата изменения в базе')),
                ('recurring_type', models.CharField(choices=[('one-time', 'Единоразово'), ('monthly', 'Ежемесячно'), ('weekly', 'Еженедельно'), ('yearly', 'Раз в год'), ('daily', 'Раз в день'), ('custom', 'Настраиваемый')], max_length=10)),
                ('recurring_end', models.DateTimeField(blank=True, null=True)),
                ('monthly_day', models.PositiveIntegerField(blank=True, null=True)),
                ('weekly_days', models.JSONField(blank=True, null=True)),
                ('yearly_interval', models.IntegerField(blank=True, null=True)),
                ('custom_period', models.JSONField(blank=True, null=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recurring', to='events_app.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventSpecificDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления в базу')),
                ('updatedAt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата изменения в базе')),
                ('is_main', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('payment', models.IntegerField()),
                ('personal_note', models.CharField(blank=True, max_length=100)),
                ('reminder_date', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_date', to='events_app.event')),
                ('organizers', models.ManyToManyField(blank=True, related_name='event_organizers', to='profiles_app.profile')),
                ('participants', models.ManyToManyField(blank=True, related_name='event_participants', to='profiles_app.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
